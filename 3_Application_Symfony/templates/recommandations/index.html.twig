{% extends 'base.html.twig' %}

{% block title %}Recommandations{% endblock %}



{% block body %}
<!--Sidebar-->
<div class = 'sidebar'>
    <div class="test-slider">
        <div>
        <a><b>Copies Sold (unite)</b></a></br>
        <p class="min_max_slider_range">min : <a id="min_1">----</a> ; max : <a id="max_1">----<a><p>
        <div id="rangeWrapper1" class="double-slider-wrapper"></div>
        </div>
        <div>
        <a><b>Revenue (unite)</b></a></br>
        <p class="min_max_slider_range">min : <a id="min_2">----</a> ; max : <a id="max_2">----<a><p>
        <div id="rangeWrapper2" class="double-slider-wrapper"></div>
        </div>
        <div>
        <a><b>Review Score (unite)</b></a></br>
        <p class="min_max_slider_range">min : <a id="min_3">----</a> ; max : <a id="max_3">----<a><p>
        <div id="rangeWrapper3" class="double-slider-wrapper"></div>
        </div>
        <div>
        <a><b>Recommandations (unite)</b></a></br>
        <p class="min_max_slider_range">min : <a id="min_4">----</a> ; max : <a id="max_4">----<a><p>
        <div id="rangeWrapper4" class="double-slider-wrapper"></div>
        </div>
    </div>
    <div id="radio-button-period-container">
        {{form_start(formGenres)}}            
        {{form_widget(formGenres.form_genres, {'attr': {'class': 'radio-btn-container'}})}}
        {{form_end(formGenres)}} 
    </div>
    </br>
    <div id="radio-button-period-container">
        {{form_start(formPublisherClass)}}            
        {{form_widget(formPublisherClass.form_publisher_class, {'attr': {'class': 'radio-btn-container'}})}}
        {{form_end(formPublisherClass)}} 
    </div>
</div>



<script>
    // Requete AJAX filtrage : 
    function filtrageAJAX(parametre1, tableau_value_slider_range) {
                    $.ajax({
                        url: "{{ path('app_recommandations_ajax_subseting') }}",
                        type: "POST",
                        dataType: "json",
                        data: {
                            appID: var_appID
                        },
                        async: true,
                        success: function (array_results) {
                        
                        },
                        error: function(jqXHR){         // Fonction à appeler si la requête échoue
                            console.log("erreur filtrage");
                        }
                });
            }
</script>
<script src="{{ asset('assets/DoubleRangeSlider.js') }}"></script>
<script>
window.addEventListener('load', () => {
	const slider1 = new DoubleRangeSlider('#rangeWrapper1', min="{{res[0] | json_encode}}", max="{{res[1] | json_encode}}");
	const slider2 = new DoubleRangeSlider('#rangeWrapper2', min="{{res[2] | json_encode}}", max="{{res[3] | json_encode}}");
	const slider3 = new DoubleRangeSlider('#rangeWrapper3', min="{{res[4] | json_encode}}", max="{{res[5] | json_encode}}");
	const slider4 = new DoubleRangeSlider('#rangeWrapper4', min="{{res[6] | json_encode}}", max="{{res[7] | json_encode}}");

    const max_1 = document.getElementById('max_1');
    const min_1 = document.getElementById('min_1');
    const max_2 = document.getElementById('max_2');
    const min_2 = document.getElementById('min_2');
    const max_3 = document.getElementById('max_3');
    const min_3 = document.getElementById('min_3');
    const max_4 = document.getElementById('max_4');
    const min_4 = document.getElementById('min_4');
    
    max_1.innerHTML = slider1.getValues()[1]
    min_1.innerHTML = slider1.getValues()[0]
    max_2.innerHTML = slider2.getValues()[1]
    min_2.innerHTML = slider2.getValues()[0]
    max_3.innerHTML = slider3.getValues()[1]
    min_3.innerHTML = slider3.getValues()[0]
    max_4.innerHTML = slider4.getValues()[1]
    min_4.innerHTML = slider4.getValues()[0]

	slider1.suscribe_change((values) => {
		array_values = [values, slider2.getValues(), slider3.getValues(), slider4.getValues()]
		console.log(array_values);
		console.log("------------------");
        // Rajouter appel AJAX
	})

	slider2.suscribe_change((values) => {
		array_values = [slider1.getValues(), values, slider3.getValues(), slider4.getValues()]
		console.log(array_values);
		console.log("------------------");
        // Rajouter appel AJAX
	})

	slider3.suscribe_change((values) => {
		array_values = [slider1.getValues(), slider2.getValues(), values, slider4.getValues()]
		console.log(array_values);
		console.log("------------------");
        // Rajouter appel AJAX
	})

	slider4.suscribe_change((values) => {
		array_values = [slider1.getValues(), slider2.getValues(), slider3.getValues(), values]
		console.log(array_values);
		console.log("------------------");
        // Rajouter appel AJAX
	})

    slider1.suscribe_input((values) => {
        min_1.innerHTML = values[0]
        max_1.innerHTML = values[1]
	})

    slider2.suscribe_input((values) => {
        min_2.innerHTML = values[0]
        max_2.innerHTML = values[1]
	})

    slider3.suscribe_input((values) => {
        min_3.innerHTML = values[0]
        max_3.innerHTML = values[1]
	})

    slider4.suscribe_input((values) => {
        min_4.innerHTML = values[0]
        max_4.innerHTML = values[1]
	})


    //// Récupération de la valeur sélectionnée dans les radioButton.
    // Form genres
    const Nodelist_input_form_genre = document.querySelectorAll('input[name="form[form_genres][]"]:checked');
    const array_input_genres = Array.from(Nodelist_input_form_genre)

    list_input_selection_genres = [];

    for (input in array_input_genres){
        list_input_selection_genres.push(array_input_genres[input].value);
    }
    console.log(list_input_selection_genres);


    // Form PublisherClass
    const Nodelist_input_form_publisherClass = document.querySelectorAll('input[name="form[form_publisher_class][]"]:checked');
    const array_input_publisherClass = Array.from(Nodelist_input_form_publisherClass)

    list_input_selection_publisherClass = [];

    for (input in array_input_publisherClass){
        list_input_selection_publisherClass.push(array_input_publisherClass[input].value);
    }
    console.log(list_input_selection_publisherClass);


    /// tentative de reactivite sur les clock des formulaires : CA MARCHE
    // form genre
    const form_genres = document.querySelector('div[id="form_form_genres"]');
    form_genres.addEventListener("click", function() {
        console.log("L'élément a été cliqué !");
    });

    // form publisherClass
    const form_publisherClass = document.querySelector('div[id="form_form_publisher_class"]');
    form_publisherClass.addEventListener("click", function() {
        console.log("L'élément a été cliqué !");
    });
})



</script>



    <!--Block title-->
    <div class = 'title_block'>
        <div>
            <p></p>
            <h1>Title</h1>
            <h4>Subtitle</h4>
        </div>
        <input class="searchBar" type="text" placeholder="Search a game">
    </div>

    


    <!--Main-container-->
    <div class="recommandations-main-container">
        <section class="games-block-container">
        {% for game in games %}
            <div class="game-block">
                <div class="game-img-container" id="game_img_container_{{game.appID}}">
                    <div class='game-img-overlay'  onclick="selectGameDashboard('{{game.appID}}')">
                    {# Rajouter icones Figma + 
                    adapter font-size pour éviter d'avoir des surprises lorsque la taille d'écran change #}
                    <div class="overlay-content" id="overlay-left">
                        <div class="overlay-content-top">
                        <img class = "icon_recommandations_KPI" src="{{asset("icons/dollar_icon.png")}}"></img>
                        <p>{{game.revenue}}</br> dollars</p>
                        </div>
                        <div class="overlay-content-bottom">
                        <img class = "icon_recommandations_KPI" src="{{asset("icons/time_icon.png")}}"></img>
                        <p>{{game.AvgPlayTime}}</br> hours</p>
                        </div>
                    </div>
                    <div class="overlay-content" id="overlay-right">
                        <div class="overlay-content-top">
                        <img class = "icon_recommandations_KPI" src="{{asset("icons/caddie_icon.png")}}"></img>
                        <p>{{game.copiesSold}}</br>unit sales</p>
                        </div>
                        <div class="overlay-content-bottom">
                        <img class = "icon_recommandations_KPI" src="{{asset("icons/like_icon.png")}}"></img>
                        <p>{{game.recommandations}}</br>good reviews</p>
                        </div>
                    </div>
                    </div>
                    
                    <img class="game-img" src={{game.headerImg}}></img>
                </div>
                <img id="games_information_icon_recommandations" src="{{asset("icons/site_games_informations_icon.png")}}" type="button" onclick="afficherInfoGame('{{game.appID}}')"></img>
            </div>

            
            {% else %}
            <li>Aucun enregistrement dans la BD</li>
        {% endfor %}
        

        <!-- Ajax -->
        <script>
            // Modal
            function afficherInfoGame(var_appID) {
                    $.ajax({
                        url: "{{ path('app_recommandations_ajax_modal') }}",
                        type: "POST",
                        dataType: "json",
                        data: {
                            appID: var_appID
                        },
                        async: true,
                        success: function (arrayDataGame) {
                            console.log(arrayDataGame[0]);
                            // On ecrit ici le script HTML définissant le contenu de la modal.
                            let warning = arrayDataGame[0].notes;
                            let chaine_vide = " ";
                            let warning_vide = chaine_vide.repeat(236);
                            let warning_affichage = ""
                            if (warning !== warning_vide) {
                                warning_affichage = "<p>Warning : "+warning+"</p>";
                            }
                            // Problèmes pour la récupération des genres et warning qui ne fonctionne pas correctement
                            var chaineHtml =   "<img class='game-img' src="+arrayDataGame[0].header_img+"></img>\
                                                <div class = 'container_modale_recommandations'>\
                                                    <div class = 'info_non_chiffre'>\
                                                        <p><b>Release date :</b>  "+arrayDataGame[0].release_date+"</p>\
                                                        <p><b>Publisher :</b>  "+arrayDataGame[0].publishers+"</p>\
                                                        <p><b>Developper :</b>  "+arrayDataGame[0].developers+"</p>\
                                                        <p><b>Genres :</b>  "+arrayDataGame[0].labels+"</p>\
                                                        <p><b>Categories :</b>  "+arrayDataGame[0].categories+"</p>\
                                                        "+warning_affichage+"\
                                                    </div>\
                                                    <div class = 'info_chiffre'>\
                                                        <p><b>Note :</b></br>"+arrayDataGame[0].review_score+"/100</p>\
                                                        <p><b>Price :</b>  </br>"+arrayDataGame[0].price+"$</p>\
                                                    </div>\
                                                </div>\
                                                <button type='button' class='btn btn-secondary active' id = 'cancel_recommandation' data-bs-dismiss='modal'>Close</button>";
                            
                            // intégration du contenu de la modal dans le squelette
                            $('#gameInfoContent').html(chaineHtml);
                            // affichage de la modal.
                            $('#gameInfoModal').modal('show');
                        },
                        error: function(jqXHR){         // Fonction à appeler si la requête échoue
                            console.log("erreur modal");
                        }
                });
            }

            // Dynamic count of selected games
            // No need to send data to the Controller, we just want to call the Ajax function of the Controller. 
            function countSelectedGame() {
                    $.ajax({
                        url: "{{ path('app_recommandations_ajax_count') }}",
                        type: "POST",
                        async: true,
                        success: function (accountSelectedGame) {
                            var chaineHtml = "\
                                <p>"+accountSelectedGame+"</p>\
                                ";
                            
                            // intégration du contenu de la modal dans le squelette
                            $('#index-continue-btn').html(chaineHtml);

                        },
                        error: function(jqXHR){         // Fonction à appeler si la requête échoue
                            console.log("erreur count");
                        }
                });
            }


            // Select game for dashboard - call we we click on a game to select him.
            function selectGameDashboard(var_appID) {
                    $.ajax({
                        url: "{{ path('app_recommandations_ajax_select') }}",
                        type: "POST",
                        dataType: "json",
                        data: {
                            appID: var_appID
                        },
                        async: true,
                        success: function (header_img) {
                            //console.log(header_img);
                            var chaineHtml = "\
                                <div class='game-img-overlay-success' onclick='unselectGameDashboard("+var_appID+")'>\
                                    <img class='check_icon' src=\"{{asset('icons/check_icon.png')}}\"></img>\
                                </div>\
                                <img class='game-img' src="+header_img+"></img>\
                                ";
                            
                            // intégration du contenu Html dans le squelette
                            $('#game_img_container_'+ var_appID).html(chaineHtml);
                            countSelectedGame();
                        },
                        error: function(jqXHR){         // Fonction à appeler si la requête échoue
                            console.log("erreur select");
                            console.log(var_appID);
                        }
                });
            }



            // Remove a game from dashboard selection table - call we we click on a game to unselect him.
            function unselectGameDashboard(var_appID) {
                    $.ajax({
                        url: "{{ path('app_recommandations_ajax_unselect') }}",
                        type: "POST",
                        dataType: "json",
                        data: {
                            appID: var_appID
                        },
                        async: true,
                        success: function (arrayDataGame) {
                            // this var is about to change when we will change graphic aspect of the website.
                            // We must add icons and change the css to make things good.
                            var chaineHtml = "\
                                <div class='game-img-overlay'  onclick='selectGameDashboard("+var_appID+")'>\
                                    <div class='overlay-content' id='overlay-left'>\
                                        <div class='overlay-content-top'>\
                                            <img class = 'icon_recommandations_KPI' src='{{asset('icons/dollar_icon.png')}}'></img>\
                                            <p>"+arrayDataGame.revenue+"</br> dollars</p>\
                                            </div>\
                                            <div class='overlay-content-bottom'>\
                                            <img class = 'icon_recommandations_KPI' src='{{asset('icons/time_icon.png')}}'></img>\
                                            <p>"+arrayDataGame.avg_play_time+"</br> hours</p>\
                                            </div>\
                                        </div>\
                                        <div class='overlay-content' id='overlay-right'>\
                                            <div class='overlay-content-top'>\
                                            <img class = 'icon_recommandations_KPI' src='{{asset('icons/caddie_icon.png')}}'></img>\
                                            <p>"+arrayDataGame.copies_sold+"</br> unit sales</p>\
                                            </div>\
                                            <div class='overlay-content-bottom'>\
                                            <img class = 'icon_recommandations_KPI' src='{{asset('icons/like_icon.png')}}'></img>\
                                            <p>"+arrayDataGame.recommandations+"</br> good reviews</p>\
                                            </div>\
                                        </div>\
                                    </div>\
                                    <img class='game-img' src="+arrayDataGame.header_img+"></img>\
                                </div>\
                            ";
                            
                            // intégration du contenu de la modal dans le squelette
                            $('#game_img_container_'+ var_appID).html(chaineHtml);
                            countSelectedGame();
                        },
                        error: function(jqXHR){         // Fonction à appeler si la requête échoue
                            console.log("erreur unselect");
                            console.log(var_appID);
                        }
                });
            }
        </script>

        <!-- Modal -->
        {#
        Ici, la modal est vide, on initialise uniquement le squelette qui est 
        ensuite rempli dans une requête AJAX.
        #}
        <div class="modal fade" id="gameInfoModal" tabindex="-1" data-bs-backdrop="static">
        <div class="modal-dialog modal-dialog-centered infoModal" id="taille_modal_recommandations">
            <div class="modal-content" id = "modal_synthese_recommandations">
            <div class="modal-body" id="gameInfoContent">
            </div>
            </div>
        </div>
        </div>

        </section>

        <div id="recommandations-to-dashboard-btn-container">
        <a type="button" id="recommandations-to-dashboard-btn" class="btn btn-primary" href ="{{ path('app_recommandations_dashobard') }}">Continue ►</a>
        <a type="button" id="index-continue-btn" class="btn btn-primary">0</a>
        </div>
    </div>
{% endblock %}
